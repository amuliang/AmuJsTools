【如何应对项目冲突】

1.一个文件不可以两个人修改

2.提交的代码不要带bug，至少在生成解决方案的时候不要报错，因为一旦其他人拿到你的代码，他也会继承你的错误，你会很欠打


【常用命令】

git status #查看状态，您应该经常使用此命令查看状态

git log #查看commit记录
git log --graph --pretty=one #您可以试一下此命令，会很漂亮

git reflog #查看操作记录

git add . #添加所有变化的文件，包括修改，添加，删除的文件
git add *.cs #只添加cs后缀文件,这是一个例子，你可以举一反三

git commit -m "这是一次测试提交" #提交，但是这是本地提交，还没有上传到服务器

git push origin dev #将当前提交过的版本上传到服务器的dev分支

git pull origin dev #将服务器上的dev分支内容取到本地

git branch dev #新建dev分支

git checkout dev #切换到dev分支

git checkout -b dev #创建dev分支并切换到dev分支

git checkout 123456 txtfile.txt #拿到某个版本的某个文件

git reset --hard head #强制切换到最近一次提交版本

git reset --hard head^ #强制切换到上一次提交的版本

git reset --hard 123456 #切换到提交号为123456的版本

git reset head #清空暂存区内容

git merge dev #将dev的代码合并到当前分支

git remote set-url origin remote_git_address #修改仓库路径，比如换服务器的时候

git rm --cached filename #将已包含文件排除在项目外，但是不删除文件

git remote rm origin
git remote add origin [url]

【当前项目理解】

master分支：当前我们在15服务器上展示的分支为master，因为只是展示用，不会从这个分支上拿数据，所以每次提交的时候，可以将项目下所有的文件全部提交上去

dev分支：这是我们的开发分支，但只作为合并代码用

私人分支：我们每个人都有一条自己的分支，仅用作开发用，有新的代码将会提交到15服务器的私人分支上，如我当前在amuliang分支上，我将我的代码提交到15服务器：
	git push origin amuliang
合并项目的时候是在dev分支上，将所有人的代码逐一拿下来，没有错误继续合并，直到将所有人的代码都合并起来。这时候dev分支上的代码为最新代码，每个人都可以从dev分支上拿到最新代码：
	git pull origin dev


【拿到最新代码报错怎么办】

一般提交的代码是没有错误的，有错误是因为
1.没有引入最新文件，因为诸如csproj文件我们是不会上传的，防止产生冲突。通常拿到最新代码是不会有严重的代码错误的。
2.没有重新生成解决方案，因为我们忽略掉了那些运行时生成的文件，需要重新生成解决方案来重新生成它们。


【git答疑】

*什么时候需要合并？
当你的所有文件版本不低于源分支版本时候，是不需要合并操作的。如你从服务器上拿到最新代码后，本地修修改改又提交了一个版本，这时候你想将最新版本提交上去，因为服务器上的版本不高于你的版本，所以不会提示你合并。
如果当你从服务器拿到最新代码后，你的伙伴也从服务器上拿到了代码，你们两个同时修改项目。你的伙伴先于你提交了一个版本，你再想提交的时候，由于版本过低，提示你先将服务器代码pull下来并合并成又一个最新的版本，这个时候你才可以提交。
所以为什么需要每个人在自己的分支上开发？因为你的分支别人不会去动，你什么时候提交都不会产生任何问题。当真正需要合并所有人代码的时候，切换到dev分支将私人代码pull下来即可。

*什么时候会产生冲突？
当两个人同时修改了一个文件的时候，会产生冲突。假设两个人从Commit1上拿到文件A，同时修改，第一个人提交Commit2不会提示冲突，但是第二个人提交Commit3的时候由于它是基于commit1的修改没有Commit2的修改内容，会提示Commit2和Commit3的A文件冲突。


